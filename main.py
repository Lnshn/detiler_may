import asyncio
import logging
import sys
from os import getenv
from aiogram import Bot, Dispatcher, html, F
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
from dotenv import load_dotenv

load_dotenv()

# Bot token can be obtained via https://t.me/BotFather
TOKEN = getenv("BOT_TOKEN")

# All handlers should be attached to the Router (or Dispatcher)
dp = Dispatcher()
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
button_info = {
    "1": {"text": "–ê—Å—ã–ª–µ—Ä—É—à–∫–∞, ”ô—Ä–¥–∞–π—ã–º “õ–æ–ª “±—à—ã–Ω —Å–æ–∑—ã–ø, —Å–∞—É–∞–ø“õ–∞ –º–æ–ª—ã–Ω–∞–Ω –∫–µ“£–µ–ª—ñ–ø, –¥”ô–ª —É–∞“õ—ã—Ç—ã–Ω–¥–∞ –∂–∞–Ω—ã–º—ã–∑–¥–∞–Ω —Ç–∞–±—ã–ª“ì–∞–Ω—ã–Ω–∞ –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω!ü§≤üèª",
          "video_id": "BAACAgIAAxkBAAICOmY2EWy878Y-pPsD38fK45FAz_pnAALeRgACj7mxSQU849tsp80iNAQ"},
    "2": {"text": "–¢–æ–æ–æ—É –ï—Ä–∞–∞, –∂—ã–ª–∞—Ç–∞—Å—ã—ã“£ “ì–æ–æ–æ–π, “õ–∞–Ω–¥–∞–π –∂–∞“ì–¥–∞–π –±–æ–ª–º–∞—Å—ã–Ω, ”ô—Ä–¥–∞–π—ã–º –¥–µ–º–µ—É –±–µ—Ä—ñ–ø, —ñ–∑–≥—ñ –∂–æ–ª –∫”©—Ä—Å–µ—Ç—ñ–ø, –∫”©–º–µ–≥—ñ“£ “Ø—à—ñ–Ω –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω!ü§≤üèª",
          "video_id": "BAACAgIAAxkBAAIBy2Y1_82DHYByHBsGkd9VqUZWU-o1AAKnQAACjW2wSV_F7_5Tk-VbNAQ"},
    "3": {"text": "–ú–∞“õ—ã—ã—ã—Å, ”ô—Ä–¥–∞–π—ã–º –±—ñ–∑ “Ø—à—ñ–Ω –∞–ª–∞“£–¥–∞–ø, “õ–∞–º“õ–æ—Ä –∫”©—Ä—Å–µ—Ç—ñ–ø, –∫”©“£—ñ–ª-–∫“Ø–π—ñ–º—ñ–∑–¥—ñ –∫”©—Ç–µ—Ä–µ—Ç—ñ–Ω—ñ–Ω–µ –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω!ü§≤üèª",
          "video_id": "BAACAgIAAxkBAAICzGY2Mc0aDGESV_JUbkd2-VxSKeBMAALeRgACRWewSeZW-ZSDLdC4NAQ"},
    "4": {"text": "–†–∏–∫–æ–æ–æ–æ–æ–æ, —Ç–µ–∞—Ç—Ä ”ô–ª–µ–º—ñ–Ω –∫”©—Ä—Å–µ—Ç—ñ–ø, —ç–º–æ—Ü–∏—è —Å—ã–π–ª–∞–ø, ”ô—Ä–¥–∞–π—ã–º –∂“Ø–∑—ñ“£–Ω–µ–Ω —à—É–∞“õ —à–∞—à—ã–ø –∂“Ø—Ä–µ—Ç—ñ–Ω—ñ–Ω–µ –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω! ü§≤üèª",
          "video_id": "BAACAgIAAxkBAAIBHmY0zOwIhibybPPq4bftWgkSN6OxAAKkSQACaxChSTmLEH7rcbKJNAQ"},
    "5": {"text": "–ù“±—Ä–±–æ–ª—É—à–∫–∞–∞, –∞—è“ì—ã–º—ã–∑–¥—ã –∂–µ—Ä–≥–µ —Ç–∏–≥—ñ–∑–±–µ–π, –∫”©“£—ñ–ª—ñ–º—ñ–∑–≥–µ “õ–∞—è—É —Ç“Ø—Å—ñ—Ä–º–µ–π, —à—ã–Ω–∞–π—ã –¥–æ—Å—Ç—ã“õ—Ç—ã —Ç“Ø—Å—ñ–Ω–¥—ñ—Ä–≥–µ–Ω—ñ–Ω–µ –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω!ü§≤üèª",
          "video_id": "BAACAgIAAxkBAAIBymY1_8ZvC9_tmxx_8zoWfH__cJg3AAKTQwADY7FJNtih7cqYdpE0BA"},
    "6": {"text": "–ë–µ–∫–Ω“±—Ä–¥–∂–æ–æ–Ω–∏–∏, –æ–æ–π —Ö–∞—Ä–∏–∑–º–∞–Ω—ã“£ —Ç“Ø–±—ñ–Ω —Ç“Ø—Å—ñ—Ä–µ—Ç—ñ–Ω, “õ—ã–ª—ã“õ—Ç–∞—Ä—ã“£–º–µ–Ω –±–∞—É—Ä–∞–ø –∞–ª—ã–ø, ”ô—Ä–¥–∞–π—ã–º –ø–æ–∑–∏—Ç–∏–≤ —Å—ã–π–ª–∞–π—Ç—ã–Ω—ã“£–∞ –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω!ü§≤üèª",
          "video_id": "BAACAgIAAxkBAAIBtWY09MfiqEY_V3OTTZPwWthaKk4_AAKySAACfYeoSWXxDkM17YhvNAQ"},
    "7": {"text": "“ö–∞—Å—ã–º—É—à–∫–∞–∞, —Ç“Ø—Ä –∂–∏–Ω–∞–ø –∞–ª–∞–¥—ã ”©–∑—ñ—ñ, “±—Å—Ç–∞–º–¥—ã –º—ñ–Ω–µ–∑—ñ“£–º–µ–Ω –ø—Ä–∏–∫–æ–ª–¥–∞—Ä—ã–Ω ”©—Ç–∫—ñ–∑—ñ–ø –∂—ñ–±–µ—Ä–µ–¥—ñ ”©–∑—ñ—ñ, –±—ñ–∑–¥—ñ —Å—ã–π–ª–∞–ø, “õ“±—Ä–º–µ—Ç –∫”©—Ä—Å–µ—Ç–µ—Ç—ñ–Ω—ñ“£–µ –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω!ü§≤üèª ",
          "video_id": "BAACAgIAAxkBAAIBKmY0zWt0gux3pXPBY1RJFGFMA2XmAAIXSgACqgypSXqLIzhClOnoNAQ"},

}

phone_number = {
    "6": "77479706702",
    "1": "77477400622",
    "2": "77082114526",
    "7": "77076032405",
    "3": "77083247865",
    "4": "77064283685",
    "5": "77774393864",
}
# phone_number = {
#     "6": "77781728073",
#     "1": "77751780599",
#     "2": "77474914763",
#     "7": "77761827619",
#     "3": "77766079387",
#     "4": "77064283685",
#     "5": "77774393864",
# }


@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    await message.answer(f"–°”ô–ª–µ–º—É—à–∫–∞, {html.bold(message.from_user.full_name)}‚ù§Ô∏è –ë—ñ–∑ —Å–µ–Ω–¥–µ—Ä–¥—ñ –∫–µ–ª–µ –∂–∞—Ç“õ–∞–Ω –û—Ç–∞–Ω "
                         f"“ö–æ—Ä“ì–∞—É—à—ã–ª–∞—Ä –º–µ—Ä–µ–∫–µ—Å—ñ–º–µ–Ω “õ“±—Ç—Ç—ã“õ—Ç–∞–π–º—ã–∑! “ö—ã–∑–¥–∞—Ä–ª–∞—Ä–¥—ã“£ –∞—Ç—ã–Ω–∞–Ω  —à–∞“õ—ã—Ä—Ç—É—ã–º—ã–∑–¥—ã “õ–∞–±—ã–ª –∞–ª—ã“£–¥–∞—Äü§≠ü´∂üèΩ",
                         reply_markup=reply_keyboard())
    await message.answer_sticker("CAACAgEAAxkBAAEFKAZmNMYMdZOyWMwl8l0EdSMAASwpQd8AArsDAALLbKFFYgoSwcOUPRo0BA")


def reply_keyboard():
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[[
        KeyboardButton(text='“ö–∞—Ä—ã–Ω–¥–∞—Å, –Ω”©–º–µ—Ä—ñ“£—ñ–∑–¥—ñ –±–æ–ª–∞–¥—ã –º–∞?üòè', request_contact=True)
    ]])
    return keyboard


def reply_seven_keyboard():
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text='–ê—Å—ã–ª–µ—Ä', callback_data="chosen:1"),
         KeyboardButton(text='–ï—Ä–Ω–∞—Ä', callback_data="chosen:2")],
        [KeyboardButton(text='–ú–∞“õ—Å–∞—Ç', callback_data="chosen:3"),
         KeyboardButton(text='–†–∏–Ω–∞—Ç', callback_data="chosen:4")],
        [KeyboardButton(text='–ù“±—Ä–±–æ–ª', callback_data="chosen:5"),
         KeyboardButton(text='–ë–µ–∫–Ω“±—Ä', callback_data="chosen:6")],
        [KeyboardButton(text='“ö–∞—Å—ã–º–∂–æ–º–∞—Ä—Ç', callback_data="chosen:7")]
    ])
    return keyboard


def reply_bool_keyboard():
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
    keyboard = InlineKeyboardMarkup(resize_keyboard=True, inline_keyboard=[
        [InlineKeyboardButton(text='–ò–∞ ‚úÖ', callback_data="check:yes")],
        [InlineKeyboardButton(text='–ñ–æ“õ ‚ùå', callback_data="check:no")],

    ])
    return keyboard


@dp.callback_query(F.data.startswith("check:"))
async def check_handler(callback: CallbackQuery):
    _, check = callback.data.split(":")
    print(callback.data)
    if check == 'yes':
        await callback.message.answer("–ö–µ—Ä–µ–º–µ—Ç—É—à–∫–∞ü•π –û–Ω–¥–∞ –æ—Å—ã –º–µ—Ä–µ–∫–µ–≥–µ –æ—Ä–∞–π —Å—ñ–∑–¥–µ—Ä–¥—ñ “±–º—ã—Ç—ã–ª–º–∞—Å —Å”ô—Ç—Ç–µ—Ä–≥–µ —Ç–æ–ª—ã –∫“Ø–Ω–¥—ñ “ö—ã–∑–¥–∞—Ä–ª–∞—Ä–º–µ–Ω ”©—Ç–∫—ñ–∑—É–≥–µ —à–∞“õ—ã—Ä–∞–º—ã–∑ü´∂üèΩ", reply_markup=None)
        await callback.message.answer_sticker('CAACAgUAAxkBAAEFLYxmNguJlirJEn_Jek__OmzeTMJGugACzAAD1F7mNny7ON8pE9OpNAQ')
        await callback.message.answer(
            "–ö“Ø–Ω—ñ: 07.05.2024\n–£–∞“õ—ã—Ç—ã: 14:00\n–î—Ä–µ—Å—Å-–∫–æ–¥: –´“£“ì–∞–π–ª—ã –∫–∏—ñ–Ω—ñ“£—ñ–∑–¥–µ—Ä\n–ñ–∞“õ—Å—ã –∫”©“£—ñ–ª-–∫“Ø–π –º–µ–Ω “±–π“õ—ã–ª–∞—Ä—ã–Ω–¥—ã “õ–∞–Ω–¥—ã—Ä—ã–ø –∫–µ–ª—ñ–Ω–¥–µ—Ä ü§óüíê\n–ö–ï–®–Ü–ö–ü–ï–ô –ö–ï–õ–ï–ú–Ü–ó‚ÄºÔ∏èüëäüèø ",
            reply_markup=None)
        await callback.message.answer("–ú–µ–∫–µ–Ω-–∂–∞–π—ã: https://2gis.kz/astana/geo/70000001029853986", reply_markup=None)
        await callback.message.answer(
            "–≠—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ –Ω–∞—à–µ–≥–æ –¥–Ω—è!", reply_markup=None)
        await callback.message.answer_sticker(
            "CAACAgEAAxkBAAEFKAhmNMYR5MPxQgd1ROGi5hAbqzCWqAACtwMAAjiFqUWaw6qzljavKTQE")
    elif check == 'no':
        await callback.message.answer("–°”©–π—Ç—Ç—ñ–Ω “ì–æ–æ–æ–π –¥–∞–∞–∞–∞", reply_markup=None)
        await callback.message.answer_sticker(
            "CAACAgUAAxkBAAEFKqNmNTXg0k32Tp0bqlpSa5FRBqbungACEwEAAtRe5jYjPZWnnjeFOjQE")


@dp.callback_query(F.data.startswith("chosen:"))
async def cb_handler(callback: CallbackQuery):
    _, number = callback.data.split(":")
    info = button_info[number]
    await callback.message.answer_video(info["video_id"])

    # text = await callback.message.answer(text="–§–∞–π–ª –∂“Ø–∫—Ç–µ–ª—ñ–ø –∂–∞—Ç—ã—Ä –∫“Ø—Ç–µ —Ç“±—Ä")
    # await callback.message.answer_video(FSInputFile(info["video_id"]), caption=info["text"])
    # await text.edit_text("–§–∞–π–ª —Å”ô—Ç—Ç—ñ –∂“Ø–∫—Ç–µ–ª–¥—ñ")


@dp.message()
async def handle_message(message: Message):
    if message.text == '–†–∏–Ω–∞—Ç':
        await message.answer_video("BAACAgIAAxkBAAIBHmY0zOwIhibybPPq4bftWgkSN6OxAAKkSQACaxChSTmLEH7rcbKJNAQ")
        await message.answer("–†–∏–∫–æ–æ–æ–æ–æ–æ, —Ç–µ–∞—Ç—Ä ”ô–ª–µ–º—ñ–Ω –∫”©—Ä—Å–µ—Ç—ñ–ø, —ç–º–æ—Ü–∏—è —Å—ã–π–ª–∞–ø, ”ô—Ä–¥–∞–π—ã–º –∂“Ø–∑—ñ“£–Ω–µ–Ω —à—É–∞“õ —à–∞—à—ã–ø –∂“Ø—Ä–µ—Ç—ñ–Ω—ñ–Ω–µ –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω! ü§≤üèª")
    if message.text == '“ö–∞—Å—ã–º–∂–æ–º–∞—Ä—Ç':
        await message.answer_video("BAACAgIAAxkBAAIBKmY0zWt0gux3pXPBY1RJFGFMA2XmAAIXSgACqgypSXqLIzhClOnoNAQ")
        await message.answer("“ö–∞—Å—ã–º—É—à–∫–∞–∞, —Ç“Ø—Ä –∂–∏–Ω–∞–ø –∞–ª–∞–¥—ã ”©–∑—ñ—ñ, “±—Å—Ç–∞–º–¥—ã –º—ñ–Ω–µ–∑—ñ“£–º–µ–Ω –ø—Ä–∏–∫–æ–ª–¥–∞—Ä—ã–Ω ”©—Ç–∫—ñ–∑—ñ–ø –∂—ñ–±–µ—Ä–µ–¥—ñ ”©–∑—ñ—ñ, –±—ñ–∑–¥—ñ —Å—ã–π–ª–∞–ø, “õ“±—Ä–º–µ—Ç –∫”©—Ä—Å–µ—Ç–µ—Ç—ñ–Ω—ñ“£–µ –†–ê–•–ú–ï–¢‚ù§Ô∏è\n –ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω!ü§≤üèª ")
    if message.text == '–ê—Å—ã–ª–µ—Ä':
        await message.answer_video("BAACAgIAAxkBAAICOmY2EWy878Y-pPsD38fK45FAz_pnAALeRgACj7mxSQU849tsp80iNAQ")
        await message.answer("–ê—Å—ã–ª–µ—Ä—É—à–∫–∞, ”ô—Ä–¥–∞–π—ã–º “õ–æ–ª “±—à—ã–Ω —Å–æ–∑—ã–ø, —Å–∞—É–∞–ø“õ–∞ –º–æ–ª—ã–Ω–∞–Ω –∫–µ“£–µ–ª—ñ–ø, –¥”ô–ª —É–∞“õ—ã—Ç—ã–Ω–¥–∞ –∂–∞–Ω—ã–º—ã–∑–¥–∞–Ω —Ç–∞–±—ã–ª“ì–∞–Ω—ã–Ω–∞ –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω!ü§≤üèª")
    if message.text == '–ï—Ä–Ω–∞—Ä':
        await message.answer_video("BAACAgIAAxkBAAIBy2Y1_82DHYByHBsGkd9VqUZWU-o1AAKnQAACjW2wSV_F7_5Tk-VbNAQ")
        await message.answer("–¢–æ–æ–æ—É –ï—Ä–∞–∞, –∂—ã–ª–∞—Ç–∞—Å—ã—ã“£ “ì–æ–æ–æ–π, “õ–∞–Ω–¥–∞–π –∂–∞“ì–¥–∞–π –±–æ–ª–º–∞—Å—ã–Ω, ”ô—Ä–¥–∞–π—ã–º –¥–µ–º–µ—É –±–µ—Ä—ñ–ø, —ñ–∑–≥—ñ –∂–æ–ª –∫”©—Ä—Å–µ—Ç—ñ–ø, –∫”©–º–µ–≥—ñ“£ “Ø—à—ñ–Ω –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω!ü§≤üèª")
    if message.text == '–ú–∞“õ—Å–∞—Ç':
        await message.answer_video("BAACAgIAAxkBAAICzGY2Mc0aDGESV_JUbkd2-VxSKeBMAALeRgACRWewSeZW-ZSDLdC4NAQ")
        await message.answer("–ú–∞“õ—ã—ã—ã—Å, ”ô—Ä–¥–∞–π—ã–º –±—ñ–∑ “Ø—à—ñ–Ω –∞–ª–∞“£–¥–∞–ø, “õ–∞–º“õ–æ—Ä –∫”©—Ä—Å–µ—Ç—ñ–ø, –∫”©“£—ñ–ª-–∫“Ø–π—ñ–º—ñ–∑–¥—ñ –∫”©—Ç–µ—Ä–µ—Ç—ñ–Ω—ñ–Ω–µ –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω!ü§≤üèª")
    if message.text == '–ù“±—Ä–±–æ–ª':
        await message.answer_video("BAACAgIAAxkBAAIBymY1_8ZvC9_tmxx_8zoWfH__cJg3AAKTQwADY7FJNtih7cqYdpE0BA")
        await message.answer("–ù“±—Ä–±–æ–ª—É—à–∫–∞–∞, –∞—è“ì—ã–º—ã–∑–¥—ã –∂–µ—Ä–≥–µ —Ç–∏–≥—ñ–∑–±–µ–π, –∫”©“£—ñ–ª—ñ–º—ñ–∑–≥–µ “õ–∞—è—É —Ç“Ø—Å—ñ—Ä–º–µ–π, —à—ã–Ω–∞–π—ã –¥–æ—Å—Ç—ã“õ—Ç—ã —Ç“Ø—Å—ñ–Ω–¥—ñ—Ä–≥–µ–Ω—ñ–Ω–µ –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω!ü§≤üèª")
    if message.text == '–ë–µ–∫–Ω“±—Ä':
        await message.answer_video("BAACAgIAAxkBAAIBtWY09MfiqEY_V3OTTZPwWthaKk4_AAKySAACfYeoSWXxDkM17YhvNAQ")
        await message.answer("–ë–µ–∫–Ω“±—Ä–¥–∂–æ–æ–Ω–∏–∏, –æ–æ–π —Ö–∞—Ä–∏–∑–º–∞–Ω—ã“£ —Ç“Ø–±—ñ–Ω —Ç“Ø—Å—ñ—Ä–µ—Ç—ñ–Ω, “õ—ã–ª—ã“õ—Ç–∞—Ä—ã“£–º–µ–Ω –±–∞—É—Ä–∞–ø –∞–ª—ã–ø, ”ô—Ä–¥–∞–π—ã–º –ø–æ–∑–∏—Ç–∏–≤ —Å—ã–π–ª–∞–π—Ç—ã–Ω—ã“£–∞ –†–ê–•–ú–ï–¢‚ù§Ô∏è\n–ê–ª–ª–∞ —Å–∞“ì–∞–Ω —Ä–∞–∑—ã –±–æ–ª—Å—ã–Ω!ü§≤üèª")


    if message.video:
        video_file_id = message.video.file_id
        print("File ID of the video:", video_file_id)
    if message.contact:
        print('------------------------------', message.contact.phone_number)

        for i in range(1, 8):
            print('-------------------------------------',message.contact.phone_number ==phone_number.get(str(i)))
            if message.contact.phone_number == phone_number.get(str(i))\
                    or message.contact.phone_number == f"+{phone_number.get(str(i))}":
                video_id = button_info.get(str(i)).get('video_id')
                print('--------------------------', video_id)
                await message.answer_video(video_id)
                text = button_info.get(str(i)).get('text')
                await message.answer(text, reply_markup=ReplyKeyboardRemove())
                await message.answer("7 –º–∞–π –∫“Ø–Ω—ñ –±–æ—Å –±–æ–ª–∞—Å—ã–∑ –±–∞?", reply_markup=reply_bool_keyboard())
                await message.answer_sticker(
                    "CAACAgQAAxkBAAEFKp9mNTXDA9B2UYoQxDBX_15_yApr_AACNAADX8YBGRmx5VMuZAtJNAQ",
                    reply_markup=reply_seven_keyboard())


async def main() -> None:
    # Initialize Bot instance with default bot properties which will be passed to all API calls

    # And the run events dispatching
    await dp.start_polling(bot)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())
